<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[ElastAlert实践]]></title>
    <url>%2F2019%2F10%2F26%2Felast-alert%2F</url>
    <content type="text"><![CDATA[IntroductionElastAlert是一个对ES中数据变更、异常、突增或符合某种模式数据进行通知报警的简单框架，出自Yelp工程团队。 Installation(Online)ElastAler基于Python开发，依赖大量第三方Python开发包，为了高效管理依赖包避免不同版本导致的兼容问题，强烈建议(此处省略一万字吐槽…)使用Virtualenv创建隔离的虚拟环境来安装部署使用ElastAlert。 Pip123首先下载并安装pip，pip为Python包管理工具$ curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py$ python get-pip.py Virtualenv123456用pip安装virtualevn$ pip install virtualenv创建Python隔离的虚拟环境并激活$ virtualenv .venv$ source .venv/bin/activate ElastAlert12345678910111213141516下载elastalert、安装elastalert依赖包、安装elastalert$ git clone https://github.com/Yelp/elastalert$ cd elastalert/$ pip install -r requirements.txt$ python setup.py installelastalert默认安装最新版本Elasticsearch Client（7.0），可以选择安装其他版本Elasticsearch Client（ElastAler支持所有ES版本）安装Elasticsearch Client（5.0+）$ pip install &quot;elasticsearch&gt;=5.0.0&quot;安装Elasticsearch Client（2.X）$ pip install &quot;elasticsearch&lt;3.0.0&quot;安装Elasticsearch Client（1.5）$ pip install &quot;elasticsearch==1.5.0&quot;具体使用哪个版本Elasticsearch Client由使用的ES版本决定 以上是在线环境下（联网）安装elastalert，所有依赖包都通过网络下载安装，相对来说比较简单。而实际应用中线上环境或内网环境为了安全都进行了网络隔离，无法直接访问外网也就没法在线安装，下面介绍离线场景下如何安装。 Installation(Offline)大部分情况下，服务器都是跟公网隔离的，下面介绍如何在离线情况下安装ElastAlert Python大部分Linux操作系统都自带Python，为了部署方便并兼容未提前安装Python的环境，一般ElastAlert打包部署时会自带Python环境 12345678下载Python源码包$ curl --location --output Python-2.7.9.tgz https://www.python.org/ftp/python/2.7.9/Python-2.7.9.tgz解压、编译、安装Python（这里使用2.7版本）$ tar -zxvf Python-2.7.9.tgz$ cd Python-2.7.9$ ./configure --prefix=/usr/local/python-2.7.9(设置安装目录)make &amp;&amp; make install Virtualenv123456789101112131415使用本地文件安装Virtualevn先将源码下载到本地$ curl --location --output virtualenv-X.X.X.tar.gz https://github.com/pypa/virtualenv/tarball/X.X.X将源码包上传到服务器、解压、创建隔离虚拟环境$ tar xvfz virtualenv-X.X.X.tar.gz$ cd pypa-virtualenv-YYYYYY$ python virtualenv.py myVEvirtualevn自动将pip、setuptool、wheel安装到虚拟隔离环境中激活虚拟隔离环境$ source ./myVE/bin/activate退出虚拟隔离环境$ deactivate ElastAlert1234下载elastalert源码到本地$ curl --location --output elastalert-0.1.39.tar.gz https://codeload.github.com/Yelp/elastalert/tar.gz/v0.1.39$ tar xvfz elastalert-0.1.39.tar.gz$ cd elastalert-0.1.39/ 12345下载所有elastalert依赖包到本地$ mkdir dependencies$ pip download -r requirements.txt -d &quot;./dependencies&quot;$ tar cvfz dependencies.tar.gz dependencies将elastalert源码包、依赖包上传到服务器 12345678910在服务器上安装elastalet依赖包$ tar zxvf dependencies.tar.gz$ cd dependencies$ pip install * -f ./ --no-index安装过程中可能出现依赖包OS环境不兼容问题例如通过Mac机器下载的依赖包，无法安装在linux上，出现这种情况需要手动从https://pypi.org/下载linux版本依赖包进行替换重新安装即可举例Mac：cffi-1.12.3-cp27-cp27m-macosx_10_6_intel.whlLinux：cffi-1.12.3-cp27-cp27m-manylinux1_x86_64.whl 1234安装elastalert$ tar xvfz elastalert-0.1.39.tar.gz$ cd elastalert-0.1.39/$ python setup.py install Config1234567891011配置ElastAlert配置文件$ cp config.yaml.example config.yaml$ vim config.yamlrules_folder：规则文件夹run_every：运行频率buffer_time：延迟时间es_host：es访问地址es_port：es访问端口配置特定规则的配置文件（详见下面）$ vim example_rules/example_frequency.yaml Usage 创建Index123456789101112ElastAlert在运行过程中需要将查询和报警原始信息存储到ES中，便于审计，调试及故障恢复（失败时可以重试）首先创建保存ElastAlert运行时信息的Index$ elastalert-create-indexElastic Version: 1.5.2Reading Elastic 5 index mappings:Reading index mapping &apos;es_mappings/5/silence.json&apos;Reading index mapping &apos;es_mappings/5/elastalert_status.json&apos;Reading index mapping &apos;es_mappings/5/elastalert.json&apos;Reading index mapping &apos;es_mappings/5/past_elastalert.json&apos;Reading index mapping &apos;es_mappings/5/elastalert_error.json&apos;New index elastalert_status createdDone! 创建规则12345678910111213141516# 使用example_rules/example_frequency.yaml作为模版es_host: elasticsearch.example.comes_port: 14900name: Example rule（规则名）type: frequency（规则类型，内置支持多种规则类型，同时支持自定义规则类型）index: logstash-*（监控的Index，支持通配符）num_events: 50timeframe:（查询时间段） hours: 4filter:（查询条件）- term: some_field: &quot;some_value&quot;alert:（报警方式）- &quot;email&quot;email:- &quot;elastalert@example.com&quot; 测试规则12345678$ elastalert-test-rule example_rules/example_frequency.yamlSuccessfully loaded Example ruleINFO:elastalert:Queried rule Example rule from 2019-10-25 16:01 CST to 2019-05-07 16:16 CST: 0 / 0 hitsINFO:elastalert:Queried rule Example rule from 2019-10-25 16:16 CST to 2019-05-07 16:31 CST: 0 / 0 hitsINFO:elastalert:Queried rule Example rule from 2019-10-25 16:31 CST to 2019-05-07 16:46 CST: 0 / 0 hits...elastalert_status - &#123;&apos;hits&apos;: 0, &apos;matches&apos;: 0, &apos;@timestamp&apos;: datetime.datetime(2019, 10, 25, 12, 4, 2, 46856, tzinfo=tzutc()), &apos;rule_name&apos;: &apos;Example rule&apos;, &apos;starttime&apos;: datetime.datetime(2019, 10, 25, 8, 1, 37, 361544, tzinfo=tzutc()), &apos;endtime&apos;: datetime.datetime(2019, 10, 25, 12, 4, 1, 361544, tzinfo=tzutc()), &apos;time_taken&apos;: 0.6194741725921631&#125; 运行规则12345直接通过命令行调用Python执行$ python -m elastalert.elastalert --verbose --rule example_frequency.yamlINFO:elastalert:Queried rule Example rule from 2019-05-07 19:56 CST to 2019-05-07 20:11 CST: 0 / 0 hitsINFO:elastalert:Ran Example rule from 2019-05-07 19:56 CST to 2019-05-07 20:11 CST: 0 query hits (0 already seen), 0 matches, 0 alerts sentINFO:elastalert:Sleeping for 59.59002 seconds 还可以通过Supervisor作为daemon进程运行 Problems 执行elastalert报错1ImportError: failed to find libmagic. Check your installation 12原因：缺少依赖包python-magic-bin解决方法：pip install python-magic-bin==0.4.14 执行elastalert报错123456789101112131415161718192021INFO:elastalert:Starting upTraceback (most recent call last): File &quot;/home/users/renjie07/Env/python2.7/python2.7/lib/python2.7/runpy.py&quot;, line 162, in _run_module_as_main &quot;__main__&quot;, fname, loader, pkg_name) File &quot;/home/users/renjie07/Env/python2.7/python2.7/lib/python2.7/runpy.py&quot;, line 72, in _run_code exec code in run_globals File &quot;/home/users/zhangjun22/elastalert/elastalert-0.1.39/elastalert/elastalert.py&quot;, line 1929, in &lt;module&gt; sys.exit(main(sys.argv[1:])) File &quot;/home/users/zhangjun22/elastalert/elastalert-0.1.39/elastalert/elastalert.py&quot;, line 1925, in main client.start() File &quot;/home/users/zhangjun22/elastalert/elastalert-0.1.39/elastalert/elastalert.py&quot;, line 1106, in start self.run_all_rules() File &quot;/home/users/zhangjun22/elastalert/elastalert-0.1.39/elastalert/elastalert.py&quot;, line 1158, in run_all_rules self.send_pending_alerts() File &quot;/home/users/zhangjun22/elastalert/elastalert-0.1.39/elastalert/elastalert.py&quot;, line 1534, in send_pending_alerts pending_alerts = self.find_recent_pending_alerts(self.alert_time_limit) File &quot;/home/users/zhangjun22/elastalert/elastalert-0.1.39/elastalert/elastalert.py&quot;, line 1526, in find_recent_pending_alerts size=1000) File &quot;/home/users/zhangjun22/elastalert/virtualenv-16.0.0/myEnv/lib/python2.7/site-packages/elasticsearch/client/utils.py&quot;, line 84, in _wrapped return func(*args, params=params, **kwargs)TypeError: search() got an unexpected keyword argument &apos;doc_type&apos; 1234原因：Python Elasticsearch SDK版本不兼容，默认elasticsearch&gt;=7.0.0，使用最新版本解决：下载elasticsearch==1.5.0版本并安装pip download elasticsearch==1.5.0 -d &quot;./dependencies&quot;pip install elasticsearch-1.5.0-py2.py3-none-any.whl -f ./ --no-index References pip Virtualenv Mac Virtualenv ImportError: failed to find libmagic Installing python package without internet]]></content>
      <categories>
        <category>Big Data</category>
      </categories>
      <tags>
        <tag>Big Data</tag>
        <tag>ElastAlert</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[介绍]]></title>
    <url>%2F2019%2F09%2F24%2Fintro%2F</url>
    <content type="text"><![CDATA[记录个人生活、工作方方面面，点点滴滴~~ 技术领域分布式系统大数据物联网生活旅游理财]]></content>
      <categories>
        <category>Distributed System</category>
        <category>Big Data</category>
        <category>IoT</category>
      </categories>
      <tags>
        <tag>Distributed System</tag>
        <tag>Big Data</tag>
        <tag>IoT</tag>
      </tags>
  </entry>
</search>
